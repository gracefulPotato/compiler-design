Terminals unused in grammar

   ROOT
   FUNCTION
   DECL
   TOK_BLOCK
   TOK_CALL
   TOK_IFELSE
   TOK_INITDECL
   TOK_POS
   TOK_NEG
   TOK_NEWARRAY
   TOK_TYPEID
   TOK_FIELD
   NEG
   POS


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program token
    3        | /* empty */

    4 token: '('
    5      | ')'
    6      | '['
    7      | ']'
    8      | '{'
    9      | '}'
   10      | ';'
   11      | ','
   12      | '.'
   13      | '='
   14      | '+'
   15      | '-'
   16      | '*'
   17      | '/'
   18      | '%'
   19      | '!'
   20      | TOK_VOID
   21      | TOK_CHAR
   22      | TOK_INT
   23      | TOK_STRING
   24      | TOK_IF
   25      | TOK_ELSE
   26      | TOK_WHILE
   27      | TOK_RETURN
   28      | TOK_STRUCT
   29      | TOK_NULL
   30      | TOK_NEW
   31      | TOK_ARRAY
   32      | TOK_EQ
   33      | TOK_NE
   34      | TOK_LT
   35      | TOK_LE
   36      | TOK_GT
   37      | TOK_GE
   38      | TOK_IDENT
   39      | TOK_INTCON
   40      | TOK_CHARCON
   41      | TOK_STRINGCON
   42      | TOK_ORD
   43      | TOK_CHR
   44      | TOK_ROOT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 19
'%' (37) 18
'(' (40) 4
')' (41) 5
'*' (42) 16
'+' (43) 14
',' (44) 11
'-' (45) 15
'.' (46) 12
'/' (47) 17
';' (59) 10
'=' (61) 13
'[' (91) 6
']' (93) 7
'{' (123) 8
'}' (125) 9
error (256)
ROOT (258)
FUNCTION (259)
DECL (260)
TOK_VOID (261) 20
TOK_CHAR (262) 21
TOK_INT (263) 22
TOK_STRING (264) 23
TOK_IF (265) 24
TOK_ELSE (266) 25
TOK_WHILE (267) 26
TOK_RETURN (268) 27
TOK_STRUCT (269) 28
TOK_NULL (270) 29
TOK_NEW (271) 30
TOK_ARRAY (272) 31
TOK_EQ (273) 32
TOK_NE (274) 33
TOK_LT (275) 34
TOK_LE (276) 35
TOK_GT (277) 36
TOK_GE (278) 37
TOK_IDENT (279) 38
TOK_INTCON (280) 39
TOK_CHARCON (281) 40
TOK_STRINGCON (282) 41
TOK_BLOCK (283)
TOK_CALL (284)
TOK_IFELSE (285)
TOK_INITDECL (286)
TOK_POS (287)
TOK_NEG (288)
TOK_NEWARRAY (289)
TOK_TYPEID (290)
TOK_FIELD (291)
TOK_ORD (292) 42
TOK_CHR (293) 43
TOK_ROOT (294) 44
NEG (295)
POS (296)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
start (59)
    on left: 1, on right: 0
program (60)
    on left: 2 3, on right: 1 2
token (61)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44,
    on right: 2


State 0

    0 $accept: . start $end

    $default  reduce using rule 3 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . token

    TOK_VOID       shift, and go to state 4
    TOK_CHAR       shift, and go to state 5
    TOK_INT        shift, and go to state 6
    TOK_STRING     shift, and go to state 7
    TOK_IF         shift, and go to state 8
    TOK_ELSE       shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_RETURN     shift, and go to state 11
    TOK_STRUCT     shift, and go to state 12
    TOK_NULL       shift, and go to state 13
    TOK_NEW        shift, and go to state 14
    TOK_ARRAY      shift, and go to state 15
    TOK_EQ         shift, and go to state 16
    TOK_NE         shift, and go to state 17
    TOK_LT         shift, and go to state 18
    TOK_LE         shift, and go to state 19
    TOK_GT         shift, and go to state 20
    TOK_GE         shift, and go to state 21
    TOK_IDENT      shift, and go to state 22
    TOK_INTCON     shift, and go to state 23
    TOK_CHARCON    shift, and go to state 24
    TOK_STRINGCON  shift, and go to state 25
    TOK_ORD        shift, and go to state 26
    TOK_CHR        shift, and go to state 27
    TOK_ROOT       shift, and go to state 28
    '='            shift, and go to state 29
    '+'            shift, and go to state 30
    '-'            shift, and go to state 31
    '*'            shift, and go to state 32
    '/'            shift, and go to state 33
    '%'            shift, and go to state 34
    '!'            shift, and go to state 35
    '('            shift, and go to state 36
    ')'            shift, and go to state 37
    '['            shift, and go to state 38
    ']'            shift, and go to state 39
    '{'            shift, and go to state 40
    '}'            shift, and go to state 41
    ';'            shift, and go to state 42
    ','            shift, and go to state 43
    '.'            shift, and go to state 44

    $default  reduce using rule 1 (start)

    token  go to state 45


State 3

    0 $accept: start $end .

    $default  accept


State 4

   20 token: TOK_VOID .

    $default  reduce using rule 20 (token)


State 5

   21 token: TOK_CHAR .

    $default  reduce using rule 21 (token)


State 6

   22 token: TOK_INT .

    $default  reduce using rule 22 (token)


State 7

   23 token: TOK_STRING .

    $default  reduce using rule 23 (token)


State 8

   24 token: TOK_IF .

    $default  reduce using rule 24 (token)


State 9

   25 token: TOK_ELSE .

    $default  reduce using rule 25 (token)


State 10

   26 token: TOK_WHILE .

    $default  reduce using rule 26 (token)


State 11

   27 token: TOK_RETURN .

    $default  reduce using rule 27 (token)


State 12

   28 token: TOK_STRUCT .

    $default  reduce using rule 28 (token)


State 13

   29 token: TOK_NULL .

    $default  reduce using rule 29 (token)


State 14

   30 token: TOK_NEW .

    $default  reduce using rule 30 (token)


State 15

   31 token: TOK_ARRAY .

    $default  reduce using rule 31 (token)


State 16

   32 token: TOK_EQ .

    $default  reduce using rule 32 (token)


State 17

   33 token: TOK_NE .

    $default  reduce using rule 33 (token)


State 18

   34 token: TOK_LT .

    $default  reduce using rule 34 (token)


State 19

   35 token: TOK_LE .

    $default  reduce using rule 35 (token)


State 20

   36 token: TOK_GT .

    $default  reduce using rule 36 (token)


State 21

   37 token: TOK_GE .

    $default  reduce using rule 37 (token)


State 22

   38 token: TOK_IDENT .

    $default  reduce using rule 38 (token)


State 23

   39 token: TOK_INTCON .

    $default  reduce using rule 39 (token)


State 24

   40 token: TOK_CHARCON .

    $default  reduce using rule 40 (token)


State 25

   41 token: TOK_STRINGCON .

    $default  reduce using rule 41 (token)


State 26

   42 token: TOK_ORD .

    $default  reduce using rule 42 (token)


State 27

   43 token: TOK_CHR .

    $default  reduce using rule 43 (token)


State 28

   44 token: TOK_ROOT .

    $default  reduce using rule 44 (token)


State 29

   13 token: '=' .

    $default  reduce using rule 13 (token)


State 30

   14 token: '+' .

    $default  reduce using rule 14 (token)


State 31

   15 token: '-' .

    $default  reduce using rule 15 (token)


State 32

   16 token: '*' .

    $default  reduce using rule 16 (token)


State 33

   17 token: '/' .

    $default  reduce using rule 17 (token)


State 34

   18 token: '%' .

    $default  reduce using rule 18 (token)


State 35

   19 token: '!' .

    $default  reduce using rule 19 (token)


State 36

    4 token: '(' .

    $default  reduce using rule 4 (token)


State 37

    5 token: ')' .

    $default  reduce using rule 5 (token)


State 38

    6 token: '[' .

    $default  reduce using rule 6 (token)


State 39

    7 token: ']' .

    $default  reduce using rule 7 (token)


State 40

    8 token: '{' .

    $default  reduce using rule 8 (token)


State 41

    9 token: '}' .

    $default  reduce using rule 9 (token)


State 42

   10 token: ';' .

    $default  reduce using rule 10 (token)


State 43

   11 token: ',' .

    $default  reduce using rule 11 (token)


State 44

   12 token: '.' .

    $default  reduce using rule 12 (token)


State 45

    2 program: program token .

    $default  reduce using rule 2 (program)
